{"ast":null,"code":"import _taggedTemplateLiteral from \"/Users/Kate/.Trash/ijvhq (1)/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Users/Kate/.Trash/ijvhq (1)/src/components/Answers.jsx\";\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  font-size: 1.2rem;\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { useContext } from 'react';\nimport styled from 'styled-components';\nimport Answer from './Answer';\nimport { Context } from './ContextProvider';\n\nvar Answers = function Answers() {\n  var _useContext = useContext(Context),\n      answer_list = _useContext.answer_list,\n      updateAnswer = _useContext.updateAnswer,\n      checkAnswer = _useContext.checkAnswer,\n      condition = _useContext.condition; // console.log(answer_list);\n\n\n  var id = answer_list.id,\n      correct = answer_list.correct,\n      text = answer_list.text,\n      url = answer_list.url;\n  return React.createElement(Box, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, React.createElement(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, answer_list.map(function (answer) {\n    return React.createElement(Item, {\n      className: condition ? 'green' : 'red',\n      key: answer.id,\n      onClick: function onClick(e) {\n        updateAnswer(answer);\n        e.currentTarget.style.backgroundColor = '#ccc';\n        if (correct) checkAnswer();\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18\n      },\n      __self: this\n    }, React.createElement(Answer, Object.assign({}, answer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    })));\n  })));\n};\n\nexport default Answers;\nvar Box = styled.div(_templateObject());\nvar Item = styled.li(_templateObject2());","map":{"version":3,"sources":["/Users/Kate/.Trash/ijvhq (1)/src/components/Answers.jsx"],"names":["React","useContext","styled","Answer","Context","Answers","answer_list","updateAnswer","checkAnswer","condition","id","correct","text","url","map","answer","e","currentTarget","style","backgroundColor","Box","div","Item","li"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AAEA,SAASC,OAAT,QAAwB,mBAAxB;;AAEA,IAAMC,OAAO,GAAG,SAAVA,OAAU,GAAM;AAAA,oBAC0CJ,UAAU,CACtEG,OADsE,CADpD;AAAA,MACZE,WADY,eACZA,WADY;AAAA,MACCC,YADD,eACCA,YADD;AAAA,MACeC,WADf,eACeA,WADf;AAAA,MAC4BC,SAD5B,eAC4BA,SAD5B,EAIpB;;;AAJoB,MAKZC,EALY,GAKeJ,WALf,CAKZI,EALY;AAAA,MAKRC,OALQ,GAKeL,WALf,CAKRK,OALQ;AAAA,MAKCC,IALD,GAKeN,WALf,CAKCM,IALD;AAAA,MAKOC,GALP,GAKeP,WALf,CAKOO,GALP;AAMpB,SACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGP,WAAW,CAACQ,GAAZ,CAAgB,UAAAC,MAAM,EAAI;AACzB,WACE,oBAAC,IAAD;AACE,MAAA,SAAS,EAAEN,SAAS,GAAG,OAAH,GAAa,KADnC;AAEE,MAAA,GAAG,EAAEM,MAAM,CAACL,EAFd;AAGE,MAAA,OAAO,EAAE,iBAAAM,CAAC,EAAI;AACZT,QAAAA,YAAY,CAACQ,MAAD,CAAZ;AACAC,QAAAA,CAAC,CAACC,aAAF,CAAgBC,KAAhB,CAAsBC,eAAtB,GAAwC,MAAxC;AACA,YAAIR,OAAJ,EAAaH,WAAW;AACzB,OAPH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OASE,oBAAC,MAAD,oBAAYO,MAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OATF,CADF;AAaD,GAdA,CADH,CADF,CADF;AAsBD,CA5BD;;AA6BA,eAAeV,OAAf;AACA,IAAMe,GAAG,GAAGlB,MAAM,CAACmB,GAAV,mBAAT;AAIA,IAAMC,IAAI,GAAGpB,MAAM,CAACqB,EAAV,oBAAV","sourcesContent":["import React, { useContext } from 'react';\nimport styled from 'styled-components';\nimport Answer from './Answer';\n\nimport { Context } from './ContextProvider';\n\nconst Answers = () => {\n  const { answer_list, updateAnswer, checkAnswer, condition } = useContext(\n    Context\n  );\n  // console.log(answer_list);\n  const { id, correct, text, url } = answer_list;\n  return (\n    <Box>\n      <ul>\n        {answer_list.map(answer => {\n          return (\n            <Item\n              className={condition ? 'green' : 'red'}\n              key={answer.id}\n              onClick={e => {\n                updateAnswer(answer);\n                e.currentTarget.style.backgroundColor = '#ccc';\n                if (correct) checkAnswer();\n              }}\n            >\n              <Answer {...answer} />\n            </Item>\n          );\n        })}\n      </ul>\n      {/* <button onClick={() => checkAnswer()}>Submit</button> */}\n    </Box>\n  );\n};\nexport default Answers;\nconst Box = styled.div`\n  font-size: 1.2rem;\n`;\n\nconst Item = styled.li``;\n"]},"metadata":{},"sourceType":"module"}