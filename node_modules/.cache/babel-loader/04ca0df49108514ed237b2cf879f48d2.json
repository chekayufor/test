{"ast":null,"code":"import _taggedTemplateLiteral from \"/Users/Kate/Downloads/ijvhq (1)/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Users/Kate/Downloads/ijvhq (1)/src/components/Answers.jsx\";\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  font-size: 1.2rem;\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { useContext } from 'react';\nimport styled from 'styled-components';\nimport Answer from './Answer';\nimport { Context } from './ContextProvider';\n\nvar Answers = function Answers(_ref) {\n  var answers = _ref.answers;\n\n  var _useContext = useContext(Context),\n      updateAnswer = _useContext.updateAnswer,\n      checkAnswer = _useContext.checkAnswer,\n      condition = _useContext.condition;\n\n  console.log({\n    answers: answers\n  });\n  return React.createElement(Box, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }, React.createElement(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }, answers.map(function (answer) {\n    return React.createElement(Item, {\n      className: condition ? 'button toggled' : 'button',\n      key: answer.id,\n      onClick: function onClick(e) {\n        handleClick(answer);\n        if (answer.correct === true) checkAnswer();\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15\n      },\n      __self: this\n    }, React.createElement(Answer, Object.assign({}, answer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    })));\n  })));\n};\n\nexport default Answers;\nvar Box = styled.div(_templateObject());\nvar Item = styled.li(_templateObject2());","map":{"version":3,"sources":["/Users/Kate/Downloads/ijvhq (1)/src/components/Answers.jsx"],"names":["React","useContext","styled","Answer","Context","Answers","answers","updateAnswer","checkAnswer","condition","console","log","map","answer","id","e","handleClick","correct","Box","div","Item","li"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AAEA,SAASC,OAAT,QAAwB,mBAAxB;;AAEA,IAAMC,OAAO,GAAG,SAAVA,OAAU,OAAiB;AAAA,MAAdC,OAAc,QAAdA,OAAc;;AAAA,oBACkBL,UAAU,CAACG,OAAD,CAD5B;AAAA,MACvBG,YADuB,eACvBA,YADuB;AAAA,MACTC,WADS,eACTA,WADS;AAAA,MACIC,SADJ,eACIA,SADJ;;AAE/BC,EAAAA,OAAO,CAACC,GAAR,CAAY;AAAEL,IAAAA,OAAO,EAAPA;AAAF,GAAZ;AACA,SACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGA,OAAO,CAACM,GAAR,CAAY,UAAAC,MAAM,EAAI;AACrB,WACE,oBAAC,IAAD;AACE,MAAA,SAAS,EAAEJ,SAAS,GAAG,gBAAH,GAAsB,QAD5C;AAEE,MAAA,GAAG,EAAEI,MAAM,CAACC,EAFd;AAGE,MAAA,OAAO,EAAE,iBAAAC,CAAC,EAAI;AACZC,QAAAA,WAAW,CAACH,MAAD,CAAX;AACA,YAAIA,MAAM,CAACI,OAAP,KAAmB,IAAvB,EAA6BT,WAAW;AACzC,OANH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAQE,oBAAC,MAAD,oBAAYK,MAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OARF,CADF;AAYD,GAbA,CADH,CADF,CADF;AAqBD,CAxBD;;AAyBA,eAAeR,OAAf;AACA,IAAMa,GAAG,GAAGhB,MAAM,CAACiB,GAAV,mBAAT;AAIA,IAAMC,IAAI,GAAGlB,MAAM,CAACmB,EAAV,oBAAV","sourcesContent":["import React, { useContext } from 'react';\nimport styled from 'styled-components';\nimport Answer from './Answer';\n\nimport { Context } from './ContextProvider';\n\nconst Answers = ({ answers }) => {\n  const { updateAnswer, checkAnswer, condition } = useContext(Context);\n  console.log({ answers });\n  return (\n    <Box>\n      <ul>\n        {answers.map(answer => {\n          return (\n            <Item\n              className={condition ? 'button toggled' : 'button'}\n              key={answer.id}\n              onClick={e => {\n                handleClick(answer);\n                if (answer.correct === true) checkAnswer();\n              }}\n            >\n              <Answer {...answer} />\n            </Item>\n          );\n        })}\n      </ul>\n      {/* <button onClick={() => checkAnswer()}>Submit</button> */}\n    </Box>\n  );\n};\nexport default Answers;\nconst Box = styled.div`\n  font-size: 1.2rem;\n`;\n\nconst Item = styled.li``;\n"]},"metadata":{},"sourceType":"module"}