{"ast":null,"code":"import _objectSpread from \"/Users/Kate/Downloads/ijvhq (1)/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"/Users/Kate/Downloads/ijvhq (1)/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/Kate/Downloads/ijvhq (1)/src/components/ContextProvider.js\";\nimport React, { useState, useEffect } from \"react\";\nimport data from \"../data.json\";\nvar Context = React.createContext();\nvar Provider = Context.Provider;\n\nvar ContextProvider = function ContextProvider(_ref) {\n  var children = _ref.children;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      question_list = _useState2[0],\n      setQuestion_list = _useState2[1];\n\n  var _useState3 = useState({}),\n      _useState4 = _slicedToArray(_useState3, 2),\n      currentQuestion = _useState4[0],\n      setCurrentQuestion = _useState4[1];\n\n  var _useState5 = useState({}),\n      _useState6 = _slicedToArray(_useState5, 2),\n      answer = _useState6[0],\n      setAnswer = _useState6[1];\n\n  var _useState7 = useState(0),\n      _useState8 = _slicedToArray(_useState7, 2),\n      score = _useState8[0],\n      setScore = _useState8[1];\n\n  var _useState9 = useState(false),\n      _useState10 = _slicedToArray(_useState9, 2),\n      condition = _useState10[0],\n      setCondition = _useState10[1];\n\n  var _useState11 = useState(''),\n      _useState12 = _slicedToArray(_useState11, 2),\n      checked = _useState12[0],\n      setChecked = _useState12[1];\n\n  var _useState13 = useState(0),\n      _useState14 = _slicedToArray(_useState13, 2),\n      currentIndex = _useState14[0],\n      setCurrentIndex = _useState14[1];\n\n  useEffect(function () {\n    // console.log({ data });\n    setQuestion_list(data);\n    setCurrentQuestion(data[currentIndex]);\n  }, []);\n\n  var handleChange = function handleChange(item) {\n    console.log(item); //console.log('e.target.value', e.target.value)\n\n    setChecked(item);\n    setAnswer(item);\n    setCondition(!condition);\n  };\n\n  var checkAnswer = function checkAnswer(item) {\n    if (item === true) setScore(score + 1);\n  };\n\n  var setIndex = function setIndex() {\n    setCurrentIndex(currentIndex + 1);\n  };\n\n  var state = {\n    question_list: question_list,\n    answer: answer,\n    condition: condition,\n    checked: checked,\n    currentQuestion: currentQuestion,\n    checkAnswer: checkAnswer,\n    score: score\n  };\n  var actions = {\n    setScore: setScore,\n    setAnswer: setAnswer,\n    handleChange: handleChange,\n    checkAnswer: checkAnswer\n  };\n  return React.createElement(Provider, {\n    value: _objectSpread({}, state, {}, actions),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, \" \", children, \" \"); // return <Provider value={ { messages,things,add_message,make_thing} }> {children} </Provider>;\n};\n\nexport { ContextProvider, Context };","map":{"version":3,"sources":["/Users/Kate/Downloads/ijvhq (1)/src/components/ContextProvider.js"],"names":["React","useState","useEffect","data","Context","createContext","Provider","ContextProvider","children","question_list","setQuestion_list","currentQuestion","setCurrentQuestion","answer","setAnswer","score","setScore","condition","setCondition","checked","setChecked","currentIndex","setCurrentIndex","handleChange","item","console","log","checkAnswer","setIndex","state","actions"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,IAAP,MAAiB,cAAjB;AAEA,IAAMC,OAAO,GAAGJ,KAAK,CAACK,aAAN,EAAhB;IACQC,Q,GAAaF,O,CAAbE,Q;;AAER,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,OAAkB;AAAA,MAAfC,QAAe,QAAfA,QAAe;;AAAA,kBACEP,QAAQ,CAAC,EAAD,CADV;AAAA;AAAA,MACjCQ,aADiC;AAAA,MAClBC,gBADkB;;AAAA,mBAEMT,QAAQ,CAAC,EAAD,CAFd;AAAA;AAAA,MAEjCU,eAFiC;AAAA,MAEhBC,kBAFgB;;AAAA,mBAGZX,QAAQ,CAAC,EAAD,CAHI;AAAA;AAAA,MAGjCY,MAHiC;AAAA,MAGzBC,SAHyB;;AAAA,mBAIdb,QAAQ,CAAC,CAAD,CAJM;AAAA;AAAA,MAIjCc,KAJiC;AAAA,MAI1BC,QAJ0B;;AAAA,mBAKNf,QAAQ,CAAC,KAAD,CALF;AAAA;AAAA,MAKjCgB,SALiC;AAAA,MAKtBC,YALsB;;AAAA,oBAMVjB,QAAQ,CAAC,EAAD,CANE;AAAA;AAAA,MAMjCkB,OANiC;AAAA,MAMxBC,UANwB;;AAAA,oBAOAnB,QAAQ,CAAC,CAAD,CAPR;AAAA;AAAA,MAOjCoB,YAPiC;AAAA,MAOnBC,eAPmB;;AASxCpB,EAAAA,SAAS,CAAC,YAAM;AACd;AACAQ,IAAAA,gBAAgB,CAACP,IAAD,CAAhB;AACAS,IAAAA,kBAAkB,CAACT,IAAI,CAACkB,YAAD,CAAL,CAAlB;AACD,GAJQ,EAIN,EAJM,CAAT;;AAOA,MAAME,YAAY,GAAG,SAAfA,YAAe,CAAAC,IAAI,EAAI;AAC3BC,IAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ,EAD2B,CAE3B;;AACAJ,IAAAA,UAAU,CAACI,IAAD,CAAV;AACAV,IAAAA,SAAS,CAACU,IAAD,CAAT;AACAN,IAAAA,YAAY,CAAC,CAACD,SAAF,CAAZ;AACD,GAND;;AAQA,MAAMU,WAAW,GAAG,SAAdA,WAAc,CAACH,IAAD,EAAU;AAC5B,QAAIA,IAAI,KAAK,IAAb,EAAmBR,QAAQ,CAACD,KAAK,GAAG,CAAT,CAAR;AACpB,GAFD;;AAGA,MAAMa,QAAQ,GAAG,SAAXA,QAAW,GAAM;AACrBN,IAAAA,eAAe,CAACD,YAAY,GAAG,CAAhB,CAAf;AACD,GAFD;;AAIA,MAAMQ,KAAK,GAAG;AACZpB,IAAAA,aAAa,EAAbA,aADY;AAEZI,IAAAA,MAAM,EAANA,MAFY;AAGZI,IAAAA,SAAS,EAATA,SAHY;AAIZE,IAAAA,OAAO,EAAPA,OAJY;AAKZR,IAAAA,eAAe,EAAfA,eALY;AAMZgB,IAAAA,WAAW,EAAXA,WANY;AAOZZ,IAAAA,KAAK,EAALA;AAPY,GAAd;AASA,MAAMe,OAAO,GAAG;AACdd,IAAAA,QAAQ,EAARA,QADc;AAEdF,IAAAA,SAAS,EAATA,SAFc;AAGdS,IAAAA,YAAY,EAAZA,YAHc;AAIdI,IAAAA,WAAW,EAAXA;AAJc,GAAhB;AAOA,SAAO,oBAAC,QAAD;AAAU,IAAA,KAAK,oBAAOE,KAAP,MAAiBC,OAAjB,CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAA6CtB,QAA7C,MAAP,CA/CwC,CAgDxC;AACD,CAjDD;;AAmDA,SAASD,eAAT,EAA0BH,OAA1B","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport data from \"../data.json\";\n\nconst Context = React.createContext();\nconst { Provider } = Context;\n\nconst ContextProvider = ({ children }) => {\n  const [question_list, setQuestion_list] = useState([]);\n  const [currentQuestion, setCurrentQuestion] = useState({});\n  const [answer, setAnswer] = useState({});\n  const [score, setScore] = useState(0);\n  const [condition, setCondition] = useState(false);\n  const [checked, setChecked] = useState('');\n  const [currentIndex, setCurrentIndex] = useState(0);\n\n  useEffect(() => {\n    // console.log({ data });\n    setQuestion_list(data);\n    setCurrentQuestion(data[currentIndex]);\n  }, []);\n\n\n  const handleChange = item => {\n    console.log(item)\n    //console.log('e.target.value', e.target.value)\n    setChecked(item);\n    setAnswer(item);\n    setCondition(!condition);\n  };\n\n  const checkAnswer = (item) => {\n    if (item === true) setScore(score + 1);\n  };\n  const setIndex = () => {\n    setCurrentIndex(currentIndex + 1)\n  }\n\n  const state = {\n    question_list,\n    answer,\n    condition,\n    checked,\n    currentQuestion,\n    checkAnswer,\n    score\n  };\n  const actions = {\n    setScore,\n    setAnswer,\n    handleChange,\n    checkAnswer\n  };\n\n  return <Provider value={{ ...state, ...actions }}> {children} </Provider>;\n  // return <Provider value={ { messages,things,add_message,make_thing} }> {children} </Provider>;\n};\n\nexport { ContextProvider, Context };\n"]},"metadata":{},"sourceType":"module"}